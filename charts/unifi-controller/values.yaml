image:
  repository: jacobalberty/unifi
  pullPolicy: IfNotPresent
  tag: "v6.5.55"

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

environment:
  timezone: "Europe/Berlin"
  stdout: true

service:
  type: "LoadBalancer"
  loadBalancerIP: ""
  ports:
    webapi: 8443

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: unifi.speedport.ip
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - unifi.speedport.ip


# if set, use this persistant volume claim for the internal mongodb
persistence:
  enabled: true
  accessMode: ReadWriteOnce 
  size: 8Gi 
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  storageClass: local-path-retain
  annotations: {}
  backup:
    enabled: true
    accessMode: ReadWriteOnce 
    size: 8Gi 
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    storageClass: local-path-retain
    annotations: {}

podSecurityContext: {}
  # runAsUser: 999
  # fsGroup: 999

securityContext: {}
#  capabilities:
#     drop:
#     - ALL
#  readOnlyRootFilesystem: false
#  runAsNonRoot: true
#  runAsUser: 999

resources: 
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi


nodeSelector: {}

tolerations: []

affinity: {}
